// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol.proto

package Protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Message_Type int32

const (
	Message_ACK          Message_Type = 0
	Message_REQUEST      Message_Type = 1
	Message_NOTIFICATION Message_Type = 2
	Message_ERROR        Message_Type = 4
)

var Message_Type_name = map[int32]string{
	0: "ACK",
	1: "REQUEST",
	2: "NOTIFICATION",
	4: "ERROR",
}

var Message_Type_value = map[string]int32{
	"ACK":          0,
	"REQUEST":      1,
	"NOTIFICATION": 2,
	"ERROR":        4,
}

func (x Message_Type) String() string {
	return proto.EnumName(Message_Type_name, int32(x))
}

func (Message_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{0, 0}
}

type Message_CtrlType int32

const (
	Message_NONE             Message_CtrlType = 0
	Message_CREATE_GROUP     Message_CtrlType = 1
	Message_GROUP_ADDMEMBERS Message_CtrlType = 2
	Message_MSG_BACK         Message_CtrlType = 3
	Message_CREATE_SESSION   Message_CtrlType = 4
)

var Message_CtrlType_name = map[int32]string{
	0: "NONE",
	1: "CREATE_GROUP",
	2: "GROUP_ADDMEMBERS",
	3: "MSG_BACK",
	4: "CREATE_SESSION",
}

var Message_CtrlType_value = map[string]int32{
	"NONE":             0,
	"CREATE_GROUP":     1,
	"GROUP_ADDMEMBERS": 2,
	"MSG_BACK":         3,
	"CREATE_SESSION":   4,
}

func (x Message_CtrlType) String() string {
	return proto.EnumName(Message_CtrlType_name, int32(x))
}

func (Message_CtrlType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{0, 1}
}

type Message_ContentType int32

const (
	Message_TEXT Message_ContentType = 0
	Message_IMG  Message_ContentType = 1
	Message_FILE Message_ContentType = 2
)

var Message_ContentType_name = map[int32]string{
	0: "TEXT",
	1: "IMG",
	2: "FILE",
}

var Message_ContentType_value = map[string]int32{
	"TEXT": 0,
	"IMG":  1,
	"FILE": 2,
}

func (x Message_ContentType) String() string {
	return proto.EnumName(Message_ContentType_name, int32(x))
}

func (Message_ContentType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{0, 2}
}

type Message_ErrorCode int32

const (
	Message_REQUEST_BODY_PARAMS_ERROR    Message_ErrorCode = 0
	Message_GROUP_CREATION_FAILED        Message_ErrorCode = 1
	Message_WITHDRAW_MESSAGE_FAILED      Message_ErrorCode = 2
	Message_CHAT_SESSION_CREATION_FAILED Message_ErrorCode = 3
)

var Message_ErrorCode_name = map[int32]string{
	0: "REQUEST_BODY_PARAMS_ERROR",
	1: "GROUP_CREATION_FAILED",
	2: "WITHDRAW_MESSAGE_FAILED",
	3: "CHAT_SESSION_CREATION_FAILED",
}

var Message_ErrorCode_value = map[string]int32{
	"REQUEST_BODY_PARAMS_ERROR":    0,
	"GROUP_CREATION_FAILED":        1,
	"WITHDRAW_MESSAGE_FAILED":      2,
	"CHAT_SESSION_CREATION_FAILED": 3,
}

func (x Message_ErrorCode) String() string {
	return proto.EnumName(Message_ErrorCode_name, int32(x))
}

func (Message_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{0, 3}
}

type Message struct {
	Type                 Message_Type        `protobuf:"varint,1,opt,name=type,proto3,enum=Protocol.Message_Type" json:"type,omitempty"`
	Cmd                  Message_CtrlType    `protobuf:"varint,2,opt,name=cmd,proto3,enum=Protocol.Message_CtrlType" json:"cmd,omitempty"`
	From                 int64               `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`
	To                   int64               `protobuf:"varint,4,opt,name=to,proto3" json:"to,omitempty"`
	Isgroup              bool                `protobuf:"varint,5,opt,name=isgroup,proto3" json:"isgroup,omitempty"`
	Content              string              `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	ContentType          Message_ContentType `protobuf:"varint,7,opt,name=content_type,json=contentType,proto3,enum=Protocol.Message_ContentType" json:"content_type,omitempty"`
	Msgid                int64               `protobuf:"varint,8,opt,name=msgid,proto3" json:"msgid,omitempty"`
	Time                 int64               `protobuf:"varint,9,opt,name=time,proto3" json:"time,omitempty"`
	Userlist             []int64             `protobuf:"varint,10,rep,packed,name=userlist,proto3" json:"userlist,omitempty"`
	Errcode              Message_ErrorCode   `protobuf:"varint,11,opt,name=errcode,proto3,enum=Protocol.Message_ErrorCode" json:"errcode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetType() Message_Type {
	if m != nil {
		return m.Type
	}
	return Message_ACK
}

func (m *Message) GetCmd() Message_CtrlType {
	if m != nil {
		return m.Cmd
	}
	return Message_NONE
}

func (m *Message) GetFrom() int64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *Message) GetTo() int64 {
	if m != nil {
		return m.To
	}
	return 0
}

func (m *Message) GetIsgroup() bool {
	if m != nil {
		return m.Isgroup
	}
	return false
}

func (m *Message) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Message) GetContentType() Message_ContentType {
	if m != nil {
		return m.ContentType
	}
	return Message_TEXT
}

func (m *Message) GetMsgid() int64 {
	if m != nil {
		return m.Msgid
	}
	return 0
}

func (m *Message) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Message) GetUserlist() []int64 {
	if m != nil {
		return m.Userlist
	}
	return nil
}

func (m *Message) GetErrcode() Message_ErrorCode {
	if m != nil {
		return m.Errcode
	}
	return Message_REQUEST_BODY_PARAMS_ERROR
}

func init() {
	proto.RegisterEnum("Protocol.Message_Type", Message_Type_name, Message_Type_value)
	proto.RegisterEnum("Protocol.Message_CtrlType", Message_CtrlType_name, Message_CtrlType_value)
	proto.RegisterEnum("Protocol.Message_ContentType", Message_ContentType_name, Message_ContentType_value)
	proto.RegisterEnum("Protocol.Message_ErrorCode", Message_ErrorCode_name, Message_ErrorCode_value)
	proto.RegisterType((*Message)(nil), "Protocol.Message")
}

func init() { proto.RegisterFile("protocol.proto", fileDescriptor_2bc2336598a3f7e0) }

var fileDescriptor_2bc2336598a3f7e0 = []byte{
	// 478 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xcf, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0x9b, 0x1f, 0x5d, 0xd2, 0xd7, 0xa9, 0xb2, 0x9e, 0x06, 0x78, 0x1b, 0x93, 0xa2, 0x9e,
	0xaa, 0x09, 0xf5, 0x00, 0xe2, 0xc0, 0x0d, 0x37, 0x75, 0xbb, 0x88, 0xa5, 0x29, 0x4e, 0xa6, 0xc1,
	0x85, 0x08, 0x5a, 0x53, 0x55, 0x6a, 0xe7, 0xca, 0xc9, 0x0e, 0xbb, 0xf3, 0xc7, 0xf1, 0x67, 0x21,
	0xbb, 0xcd, 0x40, 0x2a, 0xb7, 0xef, 0x37, 0xfe, 0x3c, 0xbd, 0x8f, 0xad, 0x40, 0x6f, 0xa7, 0x55,
	0xad, 0x16, 0x6a, 0x33, 0xb4, 0x01, 0xc3, 0xf9, 0xa1, 0xf7, 0x7f, 0xb7, 0x21, 0x48, 0x65, 0x55,
	0x7d, 0x5f, 0x49, 0xbc, 0x06, 0xbf, 0x7e, 0xda, 0x49, 0xea, 0x44, 0xce, 0xa0, 0xf7, 0xf6, 0xe5,
	0xb0, 0x81, 0x86, 0x07, 0x60, 0x58, 0x3c, 0xed, 0xa4, 0xb0, 0x0c, 0xbe, 0x01, 0x6f, 0xb1, 0x5d,
	0x52, 0xd7, 0xa2, 0x17, 0xc7, 0x68, 0x5c, 0xeb, 0x8d, 0xc5, 0x0d, 0x86, 0x08, 0xfe, 0x4f, 0xad,
	0xb6, 0xd4, 0x8b, 0x9c, 0x81, 0x27, 0x6c, 0xc6, 0x1e, 0xb8, 0xb5, 0xa2, 0xbe, 0xfd, 0xe2, 0xd6,
	0x0a, 0x29, 0x04, 0xeb, 0x6a, 0xa5, 0xd5, 0xe3, 0x8e, 0xb6, 0x23, 0x67, 0x10, 0x8a, 0xa6, 0x9a,
	0x93, 0x85, 0x7a, 0xa8, 0xe5, 0x43, 0x4d, 0x4f, 0x22, 0x67, 0xd0, 0x11, 0x4d, 0xc5, 0x8f, 0x70,
	0x7a, 0x88, 0xa5, 0x35, 0x0f, 0xac, 0xce, 0xd5, 0x7f, 0x74, 0xf6, 0x94, 0x35, 0xea, 0x2e, 0xfe,
	0x16, 0x3c, 0x83, 0xf6, 0xb6, 0x5a, 0xad, 0x97, 0x34, 0xb4, 0x22, 0xfb, 0x62, 0x7c, 0xeb, 0xf5,
	0x56, 0xd2, 0xce, 0xde, 0xd7, 0x64, 0xbc, 0x80, 0xf0, 0xb1, 0x92, 0x7a, 0xb3, 0xae, 0x6a, 0x0a,
	0x91, 0x37, 0xf0, 0xc4, 0x73, 0xc7, 0xf7, 0x10, 0x48, 0xad, 0x17, 0x6a, 0x29, 0x69, 0xd7, 0x2a,
	0x5c, 0x1e, 0x2b, 0x70, 0xad, 0x95, 0x8e, 0xd5, 0x52, 0x8a, 0x86, 0xed, 0x7f, 0x00, 0xdf, 0x4a,
	0x04, 0xe0, 0xb1, 0xf8, 0x13, 0x69, 0x61, 0x17, 0x02, 0xc1, 0x3f, 0xdf, 0xf1, 0xbc, 0x20, 0x0e,
	0x12, 0x38, 0x9d, 0x65, 0x45, 0x32, 0x49, 0x62, 0x56, 0x24, 0xd9, 0x8c, 0xb8, 0xd8, 0x81, 0x36,
	0x17, 0x22, 0x13, 0xc4, 0xef, 0x7f, 0x83, 0xb0, 0x79, 0x62, 0x0c, 0xc1, 0x9f, 0x65, 0x33, 0x4e,
	0x5a, 0x66, 0x24, 0x16, 0x9c, 0x15, 0xbc, 0x9c, 0x8a, 0xec, 0x6e, 0x4e, 0x1c, 0x3c, 0x03, 0x62,
	0x63, 0xc9, 0xc6, 0xe3, 0x94, 0xa7, 0x23, 0x2e, 0x72, 0xe2, 0xe2, 0x29, 0x84, 0x69, 0x3e, 0x2d,
	0x47, 0x66, 0xab, 0x87, 0x08, 0xbd, 0xc3, 0x54, 0xce, 0xf3, 0xdc, 0xac, 0xf2, 0xfb, 0xd7, 0xd0,
	0xfd, 0xe7, 0xcd, 0xcc, 0x8a, 0x82, 0x7f, 0x29, 0x48, 0xcb, 0xb8, 0x26, 0xe9, 0x94, 0x38, 0xe6,
	0xd3, 0x24, 0xb9, 0xe5, 0xc4, 0xed, 0xff, 0x72, 0xa0, 0xf3, 0x7c, 0x3b, 0xbc, 0x82, 0xf3, 0xc3,
	0x1d, 0xca, 0x51, 0x36, 0xfe, 0x5a, 0xce, 0x99, 0x60, 0x69, 0x5e, 0xee, 0xc5, 0x5b, 0x78, 0x0e,
	0x2f, 0xf6, 0x42, 0x76, 0x65, 0x92, 0xcd, 0xca, 0x09, 0x4b, 0x6e, 0xf9, 0x98, 0x38, 0x78, 0x09,
	0xaf, 0xee, 0x93, 0xe2, 0x66, 0x2c, 0xd8, 0x7d, 0x99, 0xf2, 0x3c, 0x67, 0x53, 0xde, 0x1c, 0xba,
	0x18, 0xc1, 0xeb, 0xf8, 0x86, 0x15, 0x8d, 0xe2, 0xd1, 0xb8, 0xf7, 0xe3, 0xc4, 0xfe, 0xdb, 0xef,
	0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0xe4, 0x64, 0x13, 0x79, 0xed, 0x02, 0x00, 0x00,
}
